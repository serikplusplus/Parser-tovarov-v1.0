import requests
from bs4 import BeautifulSoup
import csv
from string import whitespace

URL = 'https://aircomfort.com.ua/promyshlennye-kondicionery/'
# URLF = 'https://prom.ua'
HEADERS = {'user-agent': 'Mozilla/5.0 (iPad; CPU OS 11_0 like Mac OS X) AppleWebKit/604.1.34 (KHTML, like Gecko) Version/11.0 Mobile/15A5341f Safari/604.1'}


def get_html(url,params=None):
    r= requests.get(url, headers=HEADERS, params=params)
    return r

def get_content(html):
    soup = BeautifulSoup(html, 'html.parser')
    items = soup.find_all(class_='list-right')
    flower=[]
    for item in items:
        button = item.find(class_='cart')
        button = button.find('a').attrs["title"].strip()
        name = item.find(class_='name')
        name = name.find('a').attrs["href"].strip()
        if(button == 'Купить'):
            flower.append(
                {
                    'link': name,
                }
            )
    for flow in flower:
        htmlf = get_html(flow['link']).text
        soupf = BeautifulSoup(htmlf, 'html.parser')

        # Получение названия
        title = soupf.find('h1').get_text().strip()

        # Получение цены
        price = soupf.find(class_='price').get_text().strip()
        price = ''.join(filter(str.isdigit, price))
        if(len(price)>0):
            price = int(price)
        else:
            price = 0

        # Получение категории
        categori = soupf.find(class_='namecateg')
        categori = categori.findAll('a')[1].get_text().strip()


        # Получение всех картинок
        img = ''
        imgs = soupf.findAll(class_="product-image-zoom img-responsive")
        for i in imgs:
            img += i.attrs["data-zoom-image"] + ', '
        img = img.strip(whitespace+',')


        # Получение типа кондеционера
        tipe = soupf.find(class_='namecateg')
        tipe = tipe.findAll('a')[0].get_text().strip()

        # Получение серии кондеционера
        series = soupf.find(class_='namecateg')
        series = series.findAll('a')
        series = series[len(series)-1].get_text().strip()

        # Получение описания
        description = soupf.select("#tab-description>div")
        if(description==None):
            description = soupf.select("#tab-description>li")
        desc = ''
        for f in description:
            if(f.get_text().strip()=="ОПИСАНИЕ"):
                desc += '<div>'+f.get_text().strip()+'</div>'
            else:
                desc += '<div>' + f.get_text().strip() + '</div>'

        # Получение [характеристик]
        charatcers = soupf.find(id='tab-attribute')
        charatcers = charatcers.select("tbody tr")
        charatcer=[]
        for ch in charatcers:
            titleCh = ch.findAll('td')[0].get_text().strip()
            textCh = ch.findAll('td')[1].get_text().strip()
            charatcer.append({
                'name':titleCh,
                'znach':textCh
            })

        # Создание массива всех товаров
        flow['title'] = title
        flow['price'] = price
        flow['categori'] = categori
        flow['img'] = img
        flow['tipe'] = tipe
        flow['series'] = series
        flow['description'] = desc
        flow['charatcer'] = charatcer
        # print(flow['title'])
        # print(flow['series'])
        # print(flow['price'])

    # print(flower+'/n')
    return flower
#
def save_file(items,path):
    with open(path, 'a', newline='', encoding='utf-8')as file:
        writer = csv.writer(file, delimiter=',',quoting=csv.QUOTE_ALL)
        # Колонки для записи
        writer.writerow(
            ['ID', 'Тип', 'Артикул', 'Имя', 'Опубликован', 'рекомендуемый?', 'Видимость в каталоге', 'Краткое описание',
             'Описание', 'Дата начала действия продажной цены', 'Дата окончания действия продажной цены',
             'Статус налога', 'Налоговый класс', 'В наличии?', 'Запасы', 'Величина малых запасов',
             'Возможен ли предзаказ?', 'Продано индивидуально?', 'Вес (kg)', 'Длина (cm)', 'Ширина (cm)', 'Высота (cm)',
             'Разрешить отзывы от клиентов?', 'Примечание к покупке', 'Цена распродажи', 'Базовая цена', 'Категории',
             'Метки', 'Класс доставки', 'Изображения', 'Лимит загрузок', 'Число дней до просроченной загрузки',
             'Родительский', 'Сгруппированные товары', 'Апсейл', 'Кросселы', 'Внешний URL', 'Текст кнопки', 'Позиция',
             'Имя атрибута 1', 'Значение(-я) аттрибута(-ов) 1', 'Видимость атрибута 1', 'Глобальный атрибут 1',
             'Имя атрибута 2', 'Значение(-я) аттрибута(-ов) 2', 'Видимость атрибута 2', 'Глобальный атрибут 2',
             'Имя атрибута 3', 'Значение(-я) аттрибута(-ов) 3', 'Видимость атрибута 3', 'Глобальный атрибут 3',
             'Имя атрибута 4', 'Значение(-я) аттрибута(-ов) 4', 'Видимость атрибута 4', 'Глобальный атрибут 4',
             'Имя атрибута 5', 'Значение(-я) аттрибута(-ов) 5', 'Видимость атрибута 5', 'Глобальный атрибут 5',
             'Имя атрибута 6', 'Значение(-я) аттрибута(-ов) 6', 'Видимость атрибута 6', 'Глобальный атрибут 6',
             'Имя атрибута 7', 'Значение(-я) аттрибута(-ов) 7', 'Видимость атрибута 7', 'Глобальный атрибут 7',
             'Имя атрибута 8', 'Значение(-я) аттрибута(-ов) 8', 'Видимость атрибута 8', 'Глобальный атрибут 8',
             'Имя атрибута 9', 'Значение(-я) аттрибута(-ов) 9', 'Видимость атрибута 9', 'Глобальный атрибут 9',
             'Имя атрибута 10', 'Значение(-я) аттрибута(-ов) 10', 'Видимость атрибута 10', 'Глобальный атрибут 10',
             'Имя атрибута 11', 'Значение(-я) аттрибута(-ов) 11', 'Видимость атрибута 11', 'Глобальный атрибут 11',
             'Имя атрибута 12', 'Значение(-я) аттрибута(-ов) 12', 'Видимость атрибута 12', 'Глобальный атрибут 12',
             'Имя атрибута 13', 'Значение(-я) аттрибута(-ов) 13', 'Видимость атрибута 13', 'Глобальный атрибут 13',
             'Имя атрибута 14', 'Значение(-я) аттрибута(-ов) 14', 'Видимость атрибута 14', 'Глобальный атрибут 14',
             'Имя атрибута 15', 'Значение(-я) аттрибута(-ов) 15', 'Видимость атрибута 15', 'Глобальный атрибут 15',
             'Имя атрибута 16', 'Значение(-я) аттрибута(-ов) 16', 'Видимость атрибута 16', 'Глобальный атрибут 16',
             'Имя атрибута 17', 'Значение(-я) аттрибута(-ов) 17', 'Видимость атрибута 17', 'Глобальный атрибут 17',
             'Имя атрибута 18', 'Значение(-я) аттрибута(-ов) 18', 'Видимость атрибута 18', 'Глобальный атрибут 18',
             'Имя атрибута 19', 'Значение(-я) аттрибута(-ов) 19', 'Видимость атрибута 19', 'Глобальный атрибут 19',
             'Имя атрибута 20', 'Значение(-я) аттрибута(-ов) 20', 'Видимость атрибута 20', 'Глобальный атрибут 20',
             'Имя атрибута 21', 'Значение(-я) аттрибута(-ов) 21', 'Видимость атрибута 21', 'Глобальный атрибут 21',
             'Имя атрибута 22', 'Значение(-я) аттрибута(-ов) 22', 'Видимость атрибута 22', 'Глобальный атрибут 22',
             'Имя атрибута 23', 'Значение(-я) аттрибута(-ов) 23', 'Видимость атрибута 23', 'Глобальный атрибут 23',
             'Имя атрибута 24', 'Значение(-я) аттрибута(-ов) 24', 'Видимость атрибута 24', 'Глобальный атрибут 24',
             'Имя атрибута 25', 'Значение(-я) аттрибута(-ов) 25', 'Видимость атрибута 25', 'Глобальный атрибут 25',
             'Имя атрибута 26', 'Значение(-я) аттрибута(-ов) 26', 'Видимость атрибута 26', 'Глобальный атрибут 26',
             'Имя атрибута 27', 'Значение(-я) аттрибута(-ов) 27', 'Видимость атрибута 27', 'Глобальный атрибут 27',
             'Имя атрибута 28', 'Значение(-я) аттрибута(-ов) 28', 'Видимость атрибута 28', 'Глобальный атрибут 28',
             'Имя атрибута 29', 'Значение(-я) аттрибута(-ов) 29', 'Видимость атрибута 29', 'Глобальный атрибут 29',
             'Имя атрибута 30', 'Значение(-я) аттрибута(-ов) 30', 'Видимость атрибута 30', 'Глобальный атрибут 30',
             'Имя атрибута 31', 'Значение(-я) аттрибута(-ов) 31', 'Видимость атрибута 31', 'Глобальный атрибут 31',
             'Имя атрибута 32', 'Значение(-я) аттрибута(-ов) 32', 'Видимость атрибута 32', 'Глобальный атрибут 32',
             'Имя атрибута 33', 'Значение(-я) аттрибута(-ов) 33', 'Видимость атрибута 33', 'Глобальный атрибут 33',
             'Имя атрибута 34', 'Значение(-я) аттрибута(-ов) 34', 'Видимость атрибута 34', 'Глобальный атрибут 34',
             'Имя атрибута 35', 'Значение(-я) аттрибута(-ов) 35', 'Видимость атрибута 35', 'Глобальный атрибут 35',
             'Имя атрибута 36', 'Значение(-я) аттрибута(-ов) 36', 'Видимость атрибута 36', 'Глобальный атрибут 36',
             'Имя атрибута 37', 'Значение(-я) аттрибута(-ов) 37', 'Видимость атрибута 37', 'Глобальный атрибут 37',
             'Имя атрибута 38', 'Значение(-я) аттрибута(-ов) 38', 'Видимость атрибута 38', 'Глобальный атрибут 38',
             'Имя атрибута 39', 'Значение(-я) аттрибута(-ов) 39', 'Видимость атрибута 39', 'Глобальный атрибут 39',
             'Имя атрибута 40', 'Значение(-я) аттрибута(-ов) 40', 'Видимость атрибута 40', 'Глобальный атрибут 40',
             'Имя атрибута 41', 'Значение(-я) аттрибута(-ов) 41', 'Видимость атрибута 41', 'Глобальный атрибут 41',
             'Имя атрибута 42', 'Значение(-я) аттрибута(-ов) 42', 'Видимость атрибута 42', 'Глобальный атрибут 42',
             'Имя атрибута 43', 'Значение(-я) аттрибута(-ов) 43', 'Видимость атрибута 43', 'Глобальный атрибут 43',
             'Имя атрибута 44', 'Значение(-я) аттрибута(-ов) 44', 'Видимость атрибута 44', 'Глобальный атрибут 44',
             'Имя атрибута 45', 'Значение(-я) аттрибута(-ов) 45', 'Видимость атрибута 45', 'Глобальный атрибут 45',
             'Имя атрибута 46', 'Значение(-я) аттрибута(-ов) 46', 'Видимость атрибута 46', 'Глобальный атрибут 46',
             'Имя атрибута 47', 'Значение(-я) аттрибута(-ов) 47', 'Видимость атрибута 47', 'Глобальный атрибут 47',
             'Имя атрибута 48', 'Значение(-я) аттрибута(-ов) 48', 'Видимость атрибута 48', 'Глобальный атрибут 48',
             'Имя атрибута 49', 'Значение(-я) аттрибута(-ов) 49', 'Видимость атрибута 49', 'Глобальный атрибут 49',
             'Имя атрибута 50', 'Значение(-я) аттрибута(-ов) 50', 'Видимость атрибута 50', 'Глобальный атрибут 50',
            ])

        iterator = 2500
        for item in items:
            iter = 0
            char=[iterator, 'simple', '', item['title'], 1, 0, 'visible',
                             '', item['description'], '',
                             '', 'taxable', '', 1,
                             '', '', 0, 0,
                             '', '', '', '', 1,
                             '', '', item['price'], item['categori'], '',
                             '', item['img'], '', '',
                             '', '', '', '', '',
                             '', 0]

            char.append('Назначение кондиционера')
            char.append(item['tipe'])
            char.append(1)
            char.append(1)
            char.append('Серия')
            char.append(item['series'])
            char.append(1)
            char.append(1)
            iter += 2
            for v in item['charatcer']:
                iter += 1
                if( v['name']!='Назначение кондиционера'):
                    char.append(v['name'])
                    char.append(v['znach'])
                    char.append(1)
                    if( v['name']=='Рекомендуемая площадь помещения, кв.м.' or v['name']=='Цвет корпуса' or v['name']=='Wi-Fi' or v['name']=='Инвертор' or v['name']=='Функция ионизации' or v['name']=='Используемый хладагент' or v['name']=='Тип внутреннего блока' or v['name']=='Минимальная рабочая температура окружающей среды, град.'):
                        char.append(1)
                        # print(v['name'] + ' ---- ' + v['znach'])
                    else:
                        char.append(0)

            while iter<50:
                char.append("")
                char.append("")
                char.append("")
                char.append("")
                iter+=1

            writer.writerow(char)
            iterator += 1

def parse():
    html = get_html(URL)
    if html.status_code == 200:
        conders = []
        page_count = 3
        for page in range(1,page_count+1):
            print(f'Парсинг страицы {page} из {page_count}')
            html = get_html(URL,params={'page': page})
            conders.extend(get_content(html.text))
        save_file(conders,'D:/cars.csv')
        print(len(conders))
    else:
        print('Error')

parse()
